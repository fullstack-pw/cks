# docker/backend/Dockerfile - Docker image for the backend service

# Build stage
FROM golang:1.21-alpine AS builder

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache git

# Copy go.mod and go.sum files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o killerkoda-backend ./cmd/server

# Final stage
FROM alpine:3.19

# Install runtime dependencies
RUN apk add --no-cache ca-certificates curl bash

# Copy the binary from the builder stage
COPY --from=builder /app/killerkoda-backend /usr/local/bin/killerkoda-backend

# Create directories
RUN mkdir -p /etc/killerkoda/templates /etc/killerkoda/scenarios

# Copy templates and scenarios
COPY templates/ /etc/killerkoda/templates/
COPY scenarios/ /etc/killerkoda/scenarios/

# Set execution permissions
RUN chmod +x /usr/local/bin/killerkoda-backend

# Expose port
EXPOSE 8080

# Set entrypoint
ENTRYPOINT ["/usr/local/bin/killerkoda-backend"]